version: 2

sources:
  - name: chinook
    database: chinook
    description: "PostgreSQL database for Chinook digital music store"
    quoting:
      database: true
      schema: true
      identifier: true
    tables:
      - name: artist
        identifier: Artist
        description: "Musical artists and bands available in the store"
        columns:
          - name: ArtistId
            quote: true
            description: "Primary key, unique identifier for each artist"
            data_tests:
              - not_null
              - unique
          - name: Name
            quote: true
            description: "Name of the artist/band"
            data_tests:
              - not_null

      - name: album
        identifier: Album
        description: "Music albums released by artists, available for purchase"
        columns:
          - name: AlbumId
            quote: true
            description: "Primary key, unique identifier for each album"
            data_tests:
              - not_null
              - unique
          - name: Title
            quote: true
            description: "Name of the album"
            data_tests:
              - not_null
          - name: ArtistId
            quote: true
            description: "Foreign key referencing Artist.ArtistId"

      - name: track
        identifier: Track
        description: "Individual music tracks/songs available for purchase"
        columns:
          - name: TrackId
            quote: true
            description: "Primary key, unique identifier for each track"
            data_tests:
              - not_null
              - unique
          - name: Name
            quote: true
            description: "Title of the track/song"
            data_tests:
              - not_null
          - name: AlbumId
            quote: true
            description: "Foreign key referencing Album.AlbumId"
          - name: MediaTypeId
            quote: true
            description: "Foreign key referencing MediaType.MediaTypeId"
          - name: GenreId
            quote: true
            description: "Foreign key referencing Genre.GenreId"
          - name: UnitPrice
            quote: true
            description: "Price per track in USD"
            data_tests:
              - dbt_expectations.expect_column_values_to_be_between:
                  min_value: 0.09
                  max_value: 10.99

      - name: media_type
        identifier: MediaType
        description: "Format/medium of the music track (digital/physical)"
        columns:
          - name: MediaTypeId
            quote: true
            description: "Primary key, unique identifier for media format"
            data_tests:
              - not_null
              - unique
          - name: Name
            quote: true
            description: "Format name"
            data_tests:
              - not_null
              - unique

      - name: playlist
        identifier: Playlist
        description: "User-created collections of tracks"
        columns:
          - name: PlaylistId
            quote: true
            description: "Primary key, unique identifier for playlist"
            data_tests:
              - not_null
              - unique
          - name: Name
            quote: true
            description: "User-defined name for the playlist"
            data_tests:
              - not_null

      - name: playlist_track
        identifier: PlaylistTrack
        description: "Junction table linking playlists to their tracks"
        columns:
          - name: PlaylistId
            quote: true
            description: "Composite primary key, references Playlist.PlaylistId"
            data_tests:
              - not_null
          - name: TrackId
            quote: true
            description: "Composite primary key, references Track.TrackId"
            data_tests:
              - not_null
        data_tests:
          - dbt_utils.unique_combination_of_columns:
              combination_of_columns:
                - PlaylistId
                - TrackId
              quote_columns: true

      - name: genre
        identifier: Genre
        description: "Musical genre classification for tracks"
        columns:
          - name: GenreId
            quote: true
            description: "Primary key, unique identifier for genre"
            data_tests:
              - not_null
              - unique
          - name: Name
            quote: true
            description: "Genre name"
            data_tests:
              - not_null
              - unique

      - name: employee
        identifier: Employee
        description: "Store staff members and their organizational structure"
        columns:
          - name: EmployeeId
            quote: true
            description: "Primary key, unique identifier for employee"
            data_tests:
              - not_null
              - unique
          - name: Email
            quote: true
            description: "Contact email address"
            data_tests:
              - not_null
              - unique
          - name: HireDate
            quote: true
            description: "Date employee was hired"
            data_tests:
              - dbt_expectations.expect_column_values_to_be_of_type:
                  column_type: "date"
          - name: ReportsTo
            quote: true
            description: "Self-referencing foreign key to Employee.EmployeeId for manager"

      - name: customer
        identifier: Customer
        description: "Music store customers and their contact information"
        columns:
          - name: CustomerId
            quote: true
            description: "Primary key, unique identifier for customer"
            data_tests:
              - not_null
              - unique
          - name: Email
            quote: true
            description: "Contact email address"
            data_tests:
              - not_null
          - name: SupportRepId
            quote: true
            description: "Foreign key referencing Employee.EmployeeId for assigned support representative"

      - name: invoice
        identifier: Invoice
        description: "Customer purchase invoices with billing information"
        columns:
          - name: InvoiceId
            quote: true
            description: "Primary key, unique identifier for invoice"
            data_tests:
              - not_null
              - unique
          - name: CustomerId
            quote: true
            description: "Foreign key referencing Customer.CustomerId"
          - name: Total
            quote: true
            description: "Sum of all line items"
            data_tests:
              - dbt_expectations.expect_column_values_to_be_between:
                  min_value: 0.99

      - name: invoice_line
        identifier: InvoiceLine
        description: "Line items for each invoice with purchased tracks"
        columns:
          - name: InvoiceLineId
            quote: true
            description: "Primary key, unique identifier for line item"
            data_tests:
              - not_null
              - unique
          - name: InvoiceId
            quote: true
            description: "Foreign key referencing Invoice.InvoiceId"
          - name: TrackId
            quote: true
            description: "Foreign key referencing Track.TrackId"
          - name: Quantity
            quote: true
            description: "Number of units purchased"
            data_tests:
              - dbt_expectations.expect_column_values_to_be_between:
                  min_value: 1
                  max_value: 50
